trigger:
  branches:
    include:
    - main
  tags:
    include:
    - v*

variables:
- group: SMMX

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: gitversion/setup@0
  displayName: Setup GitVersion
  inputs:
    versionSpec: '5.x'

- task: gitversion/execute@0
  displayName: Execute GitVersion
  inputs:
    additionalArguments: '/output BuildServer'

- task: UseDotNet@2
  displayName: Use .NET 5
  inputs:
    packageType: 'sdk'
    version: '5.x'

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: 'restore'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: 'test'
    arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/'
    nobuild: true

# - task: PublishCodeCoverageResults@1
#   displayName: Publish code coverage report
#   inputs:
#     codeCoverageTool: 'Cobertura'
#     summaryFileLocation: '$(Build.SourcesDirectory)/**/coverage.cobertura.xml'

- task: DotNetCoreCLI@2
  displayName: Pack
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj;!**/*Tests/*.csproj'
    nobuild: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'GitVersion.NuGetVersion'

- task: PublishPipelineArtifact@1
  displayName: Publish artifacts
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    publishLocation: 'pipeline'

- task: PowerShell@2
  displayName: Push NuGet Package
  inputs:
    targetType: 'inline'
    script: 'dotnet nuget push $(Build.ArtifactStagingDirectory)\*.nupkg --api-key $(NuGetApiKey) --source https://api.nuget.org/v3/index.json'
